---
import { Icon } from "astro-icon/components";
import { ViewTransitions } from "astro:transitions";
import { getCollection, type CollectionEntry } from "astro:content";
import ToggleLightDarkMode from "../../components/toggle-light-dark-mode.astro";
import "../../styles/global.css";

type YearlyPosts = {
	[year: string]: CollectionEntry<"blog">[];
};

const posts = await getCollection("blog", ({ data }) => {
	return import.meta.env.PROD ? !data.draft : true;
});
posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

/**
 * Array of array of posts. The keys are the posts years.
 */
const postsByYear = posts.reduce((accum: YearlyPosts, post) => {
	const year = post.data.date.getFullYear().toString();
	if (!(year in accum)) {
		accum[year] = [];
	}
	accum[year].push(post);
	return accum;
}, {});

/**
 * Array of years: `["2024", "2021", "2020"]`. Just the years where blog posts where found.
 */
const years = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a));
---

<html lang="en">
	<head>
		<title>Blog Posts</title>
		<ViewTransitions />
	</head>
	<body class="bg-gray-200 text-gray-900 dark:bg-gray-800 dark:text-gray-200">
		<Icon name="tabler:brand-astro" size={32} title="Blog Logo" />
		<ToggleLightDarkMode />
		<h1>Blog entries</h1>
		<ul>
			{
				years.map((year) => (
					<li>
						<h2>{year}</h2>
						<ul>
							{postsByYear[year].map((post) => (
								<li>
									<a href={`/blog/${post.slug}`}>
										&rarr; {post.data.title} - {post.data.date.toDateString()}{" "}
									</a>
								</li>
							))}
						</ul>
					</li>
				))
			}
		</ul>
	</body>
</html>
